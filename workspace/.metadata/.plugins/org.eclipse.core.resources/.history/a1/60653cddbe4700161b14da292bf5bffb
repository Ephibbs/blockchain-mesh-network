package LANcomm;
import javax.bluetooth.*;
import javax.microedition.io.*;
import java.io.*;
import java.util.ArrayList;

public class WifiServer implements Runnable {
    
    private boolean isExit = false;
    
    private Thread t;
    private WifiManager wm;
    
    WifiServer(WifiManager wm) {
    	this.wm = wm;
    }
    
    public void start() throws BluetoothStateException {
		t = new Thread(this, "bluetooth server");
		t.start();
	}
    
    public void run() {
        try {
			startServer();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    }
    
    public void startServer() throws IOException, ClassNotFoundException {
    	String connUrl = "btspp://localhost:" + SERVICE_UUID_STRING + ";" + "name=" + SERVICE_NAME;
        StreamConnectionNotifier scn = (StreamConnectionNotifier) Connector.open(connUrl);

        System.out.println("Ready to accept connections");
        StreamConnection sc = scn.acceptAndOpen();
        
        while (!isExit) {
        	
        	RemoteDevice remoteDevice = RemoteDevice.getRemoteDevice(sc);
        	String remoteAddress = remoteDevice.getBluetoothAddress();
        	
        	System.out.println("Connection from " + remoteAddress);
        	
        	String remoteName = "NetworkNode";
        	try {
                remoteName = remoteDevice.getFriendlyName(false);
            }
            catch (IOException e) {
                System.err.println("Unable to get remote device name");
            }

            BufferedReader reader = new BufferedReader(new InputStreamReader(sc.openDataInputStream()));
            PrintWriter writer = new PrintWriter(new OutputStreamWriter(sc.openDataOutputStream()));
            String line;
            if ((line = reader.readLine()) != null) {
            	System.out.println(line);
            	bm.addReceived(line);
            }
        	sc = scn.acceptAndOpen();
        }
        sc.close();
    }
}

